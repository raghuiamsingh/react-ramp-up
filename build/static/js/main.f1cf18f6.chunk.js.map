{"version":3,"sources":["Components/login_icon.svg","Components/InputField.js","Components/ErrorItem.js","Components/Constants.js","Components/ApiFetch.js","Components/Loader.js","history.js","Components/Cookie.js","Components/LoginForm.js","Components/FormHeader.js","Components/FormFooter.js","Components/Icon.js","Containers/LoginPage.js","Components/LogoutButton.js","Containers/PlanetList.js","actions/index.js","Containers/Planet.js","reducers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FormInput","react_default","a","createElement","type","this","props","defaultValue","value","name","className","classes","placeholder","onChange","changeEvent","React","Component","ErrorItem","CredentialsError","isLoggedIn","ErrorItem_ErrorItem","apiBaseUrl","apiPeople","apiPlanets","apiFormat","fetchMethod","apiNoCache","apiFetch","fetchParam","fetchItem","apiUrl","fullUrl","arguments","length","undefined","id","Constants","fetch","method","cache","then","response","json","catch","error","console","Loader","loaderColor","withoutWrapper","react_loading_default","color","height","width","createBrowserHistory","getCookie","nameEQ","ca","document","cookie","split","i","c","charAt","substring","indexOf","eraseCookie","LoginForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","errors","loading","handleSubmit","bind","assertThisInitialized","event","_this2","preventDefault","formData","FormData","target","currentErrors","slice","get","nameError","birthError","setState","Cookie","jsonResponse","credentialsVerified","index","wrongCredentials","days","expires","date","Date","setTime","getTime","toUTCString","JSON","stringify","data","history","push","submitButton","Components_Loader","InputField","onSubmit","FormHeader","headerText","FormFooter","links","footerLinks","key","href","link","title","createFooterLinks","contents","Icon","src","imgSrc","alt","altText","LoginPage","Redirect","to","Components_FormHeader","Components_Icon","user_logo","Components_LoginForm","Components_FormFooter","0","LogoutButton","showBackLink","Link","renderBackLink","buttonType","buttonName","buttonClasses","buttonValue","onClick","buttonEvent","PlanetList","planets","searchTerm","handleSearchTextChange","handleLogout","filterText","planetsList","pUrl","population","hue","intensity","logOutput","Math","log10","isNaN","floor","backgroundColor","_this3","toLowerCase","Components_LogoutButton","map","planet","style","getPopulationColor","setPlanetData","planetObj","Planet","dispatch","boundActionCreators","bindActionCreators","PlanetActionCreators","planet_id","match","params","planetData","action","string","toUpperCase","replace","planetDet","String","normalizePlanetKey","renderPlanetDetails","connect","planetState","planetReducer","App","store","createStore","reducers","react_redux_es","Router","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1cf18f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_icon.3157e3d1.svg\";","import React from 'react';\n\nclass FormInput extends React.Component {\n    render() {\n        return (\n            <input \n                type={this.props.type}\n                defaultValue={this.props.value}\n                name={this.props.name}\n                className={this.props.classes}\n                placeholder={this.props.placeholder}\n                onChange={this.props.changeEvent}\n            />\n        );\n    }\n}\n\nexport default FormInput;\n","import React from 'react';\n\nclass ErrorItem extends React.Component {\n    render() {\n        return (\n            <p className=\"error-item\">Wrong Credentials, please try again.</p>\n        );\n    }\n}\n\nexport default function CredentialsError(props) {\n    if (props.isLoggedIn) {\n      return <ErrorItem />;\n    }\n    return null;\n}\n","export const user_icon = \"http://danielzawadzki.com/codepen/01/icon.svg\";\nexport const apiBaseUrl = \"https://swapi.co/api/\";\n\nexport const apiPeople = \"people\";\nexport const apiPlanets = \"planets\";\n\nexport const apiFormat = \"?format=json\";\n\nexport const fetchMethod = \"GET\";\nexport const apiNoCache = \"no-cache\";\n\nexport const sessionKeyName = \"swapi_user\";\n\nexport const defaultCookieLifetime = 7;\n","import * as Constants from './Constants';\n\nexport function apiFetch(fetchParam, fullUrl = false, id = false) {\n    let fetchItem;\n\n    let apiUrl;\n\n    if (fullUrl) {\n        apiUrl = fetchParam;\n    } else {\n        switch (fetchParam) {\n            case 'people': {\n                fetchItem = Constants.apiPeople;\n                break;\n            }\n            case 'planets': {\n                fetchItem = Constants.apiPlanets;\n                break;\n            }\n            default: {\n                fetchItem = Constants.apiPlanets;\n            }\n        }\n        apiUrl = Constants.apiBaseUrl + fetchItem + '/';\n        apiUrl += id ? (id + '/') : '';\n        apiUrl += Constants.apiFormat;\n    }\n\n    return fetch(apiUrl, {\n        method: Constants.fetchMethod,\n        cache: Constants.apiNoCache\n    })\n    .then(response => response.json())\n    .catch(error => console.error('Error in API:', error));\n}\n","import React from 'react';\nimport ReactLoading from \"react-loading\";\n\nclass Loader extends React.Component {\n    render() {\n        let loaderColor;\n        if (this.props.loaderColor) {\n            loaderColor = this.props.loaderColor;\n        } else {\n            loaderColor = \"#fff\";\n        }\n\n        let loaderContent;\n        if (this.props.withoutWrapper) {\n            loaderContent = <ReactLoading type=\"bubbles\" color={loaderColor} height={'20%'} width={'20%'} className=\"app-loader\"/>;\n        } else {\n            loaderContent = <div className=\"wrapper fadeInDown\">\n                <ReactLoading type=\"bubbles\" color={loaderColor} height={'20%'} width={'20%'} className=\"app-loader\"/>\n            </div>;\n        }\n        return (\n            loaderContent\n        );\n    }\n}\n\nexport default Loader;\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory({\n    // forceRefresh: true\n});\n","export function setCookie(name,value,days) {\n    var expires = \"\";\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + (days*24*60*60*1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n}\n\nexport function getCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for(var i=0;i < ca.length;i++) {\n        var c = ca[i];\n        while (c.charAt(0)===' ') c = c.substring(1,c.length);\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\n    }\n    return null;\n}\n\nexport function eraseCookie(name) {\n    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';  \n}\n","import React from 'react';\nimport FormInput from './InputField';\nimport CredentialsError from './ErrorItem';\nimport {apiFetch} from './ApiFetch';\nimport * as Constants from './Constants';\nimport Loader from './Loader';\nimport history from '../history';\nimport * as Cookie from './Cookie';\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            errors: [],\n            loading: false\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const formData = new FormData(event.target);\n        var currentErrors = this.state.errors.slice();\n        if (!formData.get('name')) {\n            currentErrors.nameError = true;\n        }\n\n        if (!formData.get('birth_year')) {\n            currentErrors.birthError = true;\n        }\n\n        this.setState({\n            loading: true\n        });\n\n        Cookie.eraseCookie(Constants.sessionKeyName);\n\n        apiFetch('people').then(function(jsonResponse) {\n            let credentialsVerified = false;\n            for (var index in jsonResponse['results']) {\n                if (jsonResponse['results'][index]['name'] === formData.get('name') \n                    && jsonResponse['results'][index]['birth_year'] === formData.get('birth_year')) {\n                    credentialsVerified = true;\n                    break;\n                }\n            }\n            if (credentialsVerified) {\n                currentErrors.wrongCredentials = false;\n                Cookie.setCookie(\n                    Constants.sessionKeyName,\n                    JSON.stringify(jsonResponse['results'][index]),\n                    Constants.defaultCookieLifetime\n                );\n            } else {\n                currentErrors.wrongCredentials = true;\n            }\n        }).then(data => {\n            this.setState({\n                errors: currentErrors,\n                loading: false\n            });\n            if (!currentErrors.wrongCredentials) {\n                history.push('/planets');\n            }\n        });\n\n        this.setState({\n            errors: currentErrors\n        });\n    }\n    \n    render() {\n        let submitButton;\n        if (this.state.loading) {\n            submitButton = <Loader loaderColor=\"#2a5082\" withoutWrapper={true} />;\n        } else {\n            submitButton = <FormInput \n                type=\"submit\" \n                classes=\"fadeIn fourth\" \n                name=\"submit\" \n                value=\"Log In\" \n            />;\n        }\n        return (\n            <form className=\"login-form\" onSubmit={this.handleSubmit}>\n                <FormInput \n                    type=\"text\" \n                    classes={\"fadeIn second\" + (this.state.errors.nameError ? ' errorField' : '')}\n                    name=\"name\" \n                    placeholder=\"Name\" \n                    value=\"\"\n                />\n                <FormInput \n                    type=\"text\" \n                    classes={\"fadeIn third\" + (this.state.errors.birthError ? ' errorField' : '')}\n                    name=\"birth_year\" \n                    placeholder=\"Birth Year\" \n                    value=\"\" \n                />\n                <CredentialsError isLoggedIn={this.state.errors.wrongCredentials} />\n                {submitButton}\n            </form>\n        );\n    }\n}\n\nexport default LoginForm;\n","import React from 'react';\n\nclass FormHeader extends React.Component {\n    render() {\n        return (\n            <h2 className={this.props.classes}>{this.props.headerText}</h2>\n        );\n    }\n}\n\nexport default FormHeader;\n","import React from 'react';\n\nclass FormFooter extends React.Component {\n    createFooterLinks(links) {\n        let footerLinks = [];\n        for (let key in links) {\n            footerLinks.push(\n                <a \n                    className={links[key].classes}\n                    href={links[key].link}\n                    key={key}\n                >\n                    {links[key].title}\n                </a>\n            );\n        }\n        return footerLinks;\n    }\n\n    render() {\n        return (\n            <div className=\"formFooter\">\n                {this.createFooterLinks(this.props.contents)}\n            </div>\n        );\n    }\n}\n\nexport default FormFooter;\n","import React from 'react';\n\nclass Icon extends React.Component {\n    render() {\n        return (\n            <div className={this.props.classes}>\n                <img src={this.props.imgSrc} className=\"icon\" alt={this.props.altText} />\n            </div>\n        );\n    }\n}\n\nexport default Icon;\n","import React from 'react';\nimport LoginForm from '../Components/LoginForm';\nimport FormHeader from '../Components/FormHeader';\nimport FormFooter from '../Components/FormFooter';\nimport Icon from '../Components/Icon';\nimport * as Constants from '../Components/Constants';\nimport { Redirect } from 'react-router-dom';\nimport user_logo from '../Components/login_icon.svg';\nimport * as Cookie from '../Components/Cookie';\n\nclass LoginPage extends React.Component {\n  render() {\n    if (Cookie.getCookie(Constants.sessionKeyName) !== null) {\n      return <Redirect to=\"/planets\" />;\n    }\n\n    const footerLinks = {\n      0: {classes: \"underlineHover\", link: \"#\", title: \"Forgot Password?\"}\n    };\n\n    return (\n      <div className=\"wrapper fadeInDown\">\n        <div className=\"formContent\">\n          <FormHeader classes=\"active\" headerText=\"Sign In\" />\n          <Icon imgSrc={user_logo} classes=\"fadeIn first\" altText=\"User Icon\" />\n\n          <LoginForm />\n\n          <FormFooter contents={footerLinks} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass LogoutButton extends React.Component {\n    renderBackLink() {\n        if (this.props.showBackLink) {\n            return (\n                <Link to={'/planets'}>\n                    {\"< Go back\"}\n                </Link>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"logout-button-holder\">\n                {this.renderBackLink()}\n                <input \n                    type={this.props.buttonType}\n                    name={this.props.buttonName}\n                    className={this.props.buttonClasses}\n                    value={this.props.buttonValue}\n                    onClick={this.props.buttonEvent}\n                />\n            </div>\n        );\n    }\n}\n\nexport default LogoutButton;\n","import React from 'react';\nimport * as Constants from '../Components/Constants';\nimport {apiFetch} from '../Components/ApiFetch';\nimport FormHeader from '../Components/FormHeader';\nimport LogoutButton from '../Components/LogoutButton';\nimport Loader from '../Components/Loader';\nimport { Redirect, Link } from 'react-router-dom';\nimport FormInput from '../Components/InputField';\nimport history from '../history';\nimport * as Cookie from '../Components/Cookie';\n\nclass PlanetList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      planets: [],\n      searchTerm: '',\n      loading: true\n    };\n\n    this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n  \n  handleSearchTextChange(filterText) {\n    this.setState({\n      searchTerm: filterText.target.value\n    });\n  }\n\n  handleLogout() {\n    Cookie.eraseCookie(Constants.sessionKeyName);\n    history.push('/');\n  }\n\n  componentDidMount() {\n    let planetsList = [];\n    apiFetch('planets').then(function(jsonResponse) {\n      for (var index in jsonResponse['results']) {\n        var pUrl = jsonResponse['results'][index]['url'];\n        pUrl = pUrl.split('/');\n        planetsList.push({\n          name: jsonResponse['results'][index]['name'],\n          id: pUrl[pUrl.length - 2],\n          population: jsonResponse['results'][index]['population']\n        });\n      }\n    }).then(data => this.setState({\n      planets: planetsList,\n      loading: false\n    }));\n  }\n\n  getPopulationColor(population) {\n    let hue;\n    var logOutput = Math.log10(population);\n    let intensity;\n    if (!isNaN(logOutput)) {\n      hue = \"360\";\n      intensity = Math.floor(5 * logOutput);\n      if (intensity > 100) {\n        intensity = 100;\n      } else if (intensity < 0) {\n        intensity = 0;\n      }\n      intensity = intensity + \"%\";\n    } else {\n      hue = \"195\";\n      intensity = \"50%\";\n    }\n    var saturation = \"100%\";\n\n    return {\n      backgroundColor: 'hsl('+hue+', '+saturation+', '+intensity+')'\n    };\n  }\n\n  render() {\n    if (Cookie.getCookie(Constants.sessionKeyName) === null) {\n      return <Redirect to=\"/\" />;\n    }\n\n    const searchTerm = this.state.searchTerm.toLowerCase();\n    let content;\n\n    if (this.state.loading) {\n      content = <Loader />;\n    } else {\n      content = <div className=\"wrapper fadeInDown\">\n        <LogoutButton \n          buttonType=\"button\"\n          buttonName=\"logout\"\n          buttonClasses=\"logout-button right-float\"\n          buttonValue=\"Logout\"\n          buttonEvent={this.handleLogout}\n        />\n        <div className=\"formContent\">\n          <FormHeader classes=\"active\" headerText=\"Planets List\" />\n          <FormInput \n            type=\"text\" \n            classes=\"fadeIn second\"\n            name=\"search\" \n            placeholder=\"Search a planet\" \n            value={this.state.searchTerm}\n            changeEvent={this.handleSearchTextChange}\n          />\n          <ul className=\"planet-list\">\n            {this.state.planets.map(planet => {\n              var lowerName = planet.name.toLowerCase();\n              if (lowerName.indexOf(searchTerm) === -1) {\n                return '';\n              }\n              return (\n                <li className=\"planet-item\" style={this.getPopulationColor(planet.population)} key={planet.id}>\n                  <Link to={'/planet/'+planet.id}>\n                    {planet.name}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>;\n    }\n    return (\n      content\n    );\n  }\n}\n\nexport default PlanetList;\n","export function setPlanetData(planetObj) {\n    return {\n        type: 'SET_PLANET_DATA',\n        planetObj\n    }\n}","import React from 'react';\nimport FormHeader from '../Components/FormHeader';\nimport {apiFetch} from '../Components/ApiFetch';\nimport * as Constants from '../Components/Constants';\nimport { Redirect } from 'react-router-dom';\nimport LogoutButton from '../Components/LogoutButton';\nimport history from '../history';\nimport Loader from '../Components/Loader';\nimport * as Cookie from '../Components/Cookie';\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux';\nimport * as PlanetActionCreators from '../actions';\n\nclass Planet extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dispatch } = props;\n        this.boundActionCreators = bindActionCreators(PlanetActionCreators, dispatch);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    handleLogout() {\n        Cookie.eraseCookie(Constants.sessionKeyName);\n        history.push('/');\n    }\n\n    componentDidMount() {\n        let { dispatch } = this.props;\n        var planet_id = this.props.match.params.id;\n        let planetData = [];\n        apiFetch('planets', false, planet_id).then(function(jsonResponse) {\n            planetData = jsonResponse;\n        }).then(data => {\n            let action = PlanetActionCreators.setPlanetData(planetData);\n            dispatch(action);\n        });\n    }\n\n    normalizePlanetKey(string) {\n        string = string.charAt(0).toUpperCase() + string.slice(1);\n        string = string.replace(/_/g,\" \");\n        string = string.toLowerCase().replace(\n            /\\b./g,\n            function(a){\n                return a.toUpperCase();\n            }\n        );\n        return string;\n    }\n\n    renderPlanetDetails(planet) {\n        let planetDet = [];\n        for(var index in planet) {\n            if ((typeof planet[index] === 'string' || planet[index] instanceof String) \n                && planet[index].indexOf('http') < 0) {\n                planetDet.push(\n                    <div key={index} className=\"planet-details\">\n                        <span className=\"details-key\">{this.normalizePlanetKey(index)}: </span>\n                        <span>{planet[index]}</span>\n                    </div>\n                );\n            }\n        }\n        return planetDet;\n    }\n\n    render() {\n        if (Cookie.getCookie(Constants.sessionKeyName) === null) {\n            return <Redirect to=\"/\" />;\n        }\n\n        var planet_id = this.props.match.params.id;\n\n        let content;\n        if (this.props.loading) {\n            content = <Loader />;\n        } else {\n            content = <div className=\"wrapper fadeInDown\">\n                <LogoutButton \n                    buttonType=\"button\"\n                    buttonName=\"logout\"\n                    buttonClasses=\"logout-button right-float\"\n                    buttonValue=\"Logout\"\n                    buttonEvent={this.handleLogout}\n                    showBackLink={true}\n                />\n                <div className=\"formContent\">\n                    <FormHeader classes=\"active\" headerText={\"Planet Details (ID: \"+planet_id+\")\"} />\n                    {this.renderPlanetDetails(this.props.planet)}\n                </div>\n            </div>;\n        }\n\n        return (\n            content\n        );\n    };\n}\n\nfunction mapState(state) {\n    return state;\n}\n\nexport default connect(mapState)(Planet);\n","const planetState = {\n    planet: {},\n    loading: true\n};\n\nexport function planetReducer(state = planetState, action) {\n    switch (action.type) {\n        case 'SET_PLANET_DATA': \n            return {\n                planet: action.planetObj,\n                loading: false\n            };\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport './Styles/index.scss';\nimport LoginPage from './Containers/LoginPage';\nimport PlanetList from './Containers/PlanetList';\nimport Planet from './Containers/Planet';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from './history';\n\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport * as reducers from './reducers';\n\nclass App extends React.Component {\n  render() {\n    const store = createStore(reducers.planetReducer);\n\n    return (\n      <Provider store={store}>\n        <Router history={history}>\n          <Switch>\n            <Route exact={true} path=\"/\" component={LoginPage} />\n            <Route path=\"/planets\" component={PlanetList} />\n            <Route path=\"/planet/:id\" component={Planet} />\n          </Switch>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}